{
    "swagger": "2.0",
    "info": {
        "description": "Create a backend API application for Gigmile Technologies' tech team to replace verbal daily standups with written updates. The application should allow employees to submit daily updates within a 15-minute window, view updates from all team members, filter updates by week/day/sprint/owner, and include specific information such as EmployeeID, Employee name, Date, Sprint ID, Task IDs, What was done yesterday, What will be done today, Blocked by employee IDs, Breakaway, Check-in time, and Status (before standup, after standup, within standup ) around what time was this logged. The system should not allow deletion or updating of updates.",
        "title": "Update (stand-up) API",
        "contact": {
            "name": "Agu Chijioke",
            "url": "https://github.com/chokey2nv",
            "email": "chokey2nv@gmail.com"
        },
        "version": "1"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/api/v1/settings": {
            "get": {
                "description": "Get a list of all settings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Get all settings",
                "responses": {
                    "200": {
                        "description": "List of settings",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.Response"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new setting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Create an setting",
                "parameters": [
                    {
                        "description": "Setting information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.SettingDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Setting created successfully",
                        "schema": {
                            "$ref": "#/definitions/dtos.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/sprints/get": {
            "post": {
                "description": "Get a list of all sprints",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sprints"
                ],
                "summary": "Get all sprints",
                "parameters": [
                    {
                        "description": "User information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.GetSprintDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of sprints",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.Response"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/sprints/new": {
            "post": {
                "description": "Create a new sprint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sprints"
                ],
                "summary": "Create an sprint",
                "parameters": [
                    {
                        "description": "Sprint information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.SprintDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sprint created successfully",
                        "schema": {
                            "$ref": "#/definitions/dtos.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/tasks/get": {
            "post": {
                "description": "Get a list of all tasks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Get all tasks",
                "parameters": [
                    {
                        "description": "User information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.GetTaskDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tasks",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.Response"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/tasks/new": {
            "post": {
                "description": "Create a new task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Create an task",
                "parameters": [
                    {
                        "description": "Task information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.TaskDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task created successfully",
                        "schema": {
                            "$ref": "#/definitions/dtos.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/updates/get": {
            "post": {
                "description": "Get a list of all updates",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "updates"
                ],
                "summary": "Get all updates",
                "parameters": [
                    {
                        "description": "Update information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.GetUpdateDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of updates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.Update"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/updates/new": {
            "post": {
                "description": "Create a new update",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "updates"
                ],
                "summary": "Create an update",
                "parameters": [
                    {
                        "description": "Update information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update created successfully",
                        "schema": {
                            "$ref": "#/definitions/dtos.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "description": "Get a list of all users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "parameters": [
                    {
                        "description": "Page information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.GetUserDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.User"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login with username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login with username and password",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.LoginDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Signup a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Signup a new user",
                "parameters": [
                    {
                        "description": "User information",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.SignUpDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dtos.GetSprintDto": {
            "type": "object",
            "properties": {
                "endDate": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            }
        },
        "dtos.GetTaskDto": {
            "type": "object",
            "properties": {
                "pageOption": {
                    "$ref": "#/definitions/dtos.PageOption"
                }
            }
        },
        "dtos.GetUPdateFilterDto": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "day": {
                    "type": "integer"
                },
                "employeeId": {
                    "description": "week/day/sprint/owner",
                    "type": "string"
                },
                "employeeName": {
                    "type": "string"
                },
                "sprintName": {
                    "type": "string"
                },
                "week": {
                    "type": "integer"
                }
            }
        },
        "dtos.GetUpdateDto": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/dtos.GetUPdateFilterDto"
                },
                "pageOption": {
                    "$ref": "#/definitions/dtos.PageOption"
                }
            }
        },
        "dtos.GetUserDto": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "userRole": {
                    "type": "string"
                }
            }
        },
        "dtos.LoginDto": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dtos.PageOption": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "skip": {
                    "type": "integer"
                }
            }
        },
        "dtos.Response": {
            "type": "object",
            "properties": {
                "data": {}
            }
        },
        "dtos.SettingDto": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dtos.SignUpDto": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/dtos.UserDto"
                }
            }
        },
        "dtos.SprintDto": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            }
        },
        "dtos.TaskDto": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dtos.UpdateDto": {
            "type": "object",
            "properties": {
                "blockByEmployeeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "breakaway": {
                    "type": "boolean"
                },
                "currentTaskIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "previousCompletedTaskIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sprintId": {
                    "type": "string"
                },
                "taskIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "week": {
                    "type": "integer"
                }
            }
        },
        "dtos.UserDto": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "userRole": {
                    "type": "string"
                }
            }
        },
        "models.Update": {
            "type": "object",
            "properties": {
                "blockByEmployeeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "breakaway": {
                    "type": "boolean"
                },
                "createdAt": {
                    "type": "string"
                },
                "currentTaskIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dayOfWeek": {
                    "type": "integer"
                },
                "employee": {
                    "$ref": "#/definitions/models.User"
                },
                "employeeId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "previousCompletedTaskIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sprintId": {
                    "type": "string"
                },
                "taskIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timestamp": {
                    "type": "integer"
                },
                "week": {
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "userRole": {
                    "$ref": "#/definitions/models.UserRole"
                }
            }
        },
        "models.UserRole": {
            "type": "string",
            "enum": [
                "admin",
                "staff"
            ],
            "x-enum-varnames": [
                "UserRole_Admin",
                "UserRole_Staff"
            ]
        }
    }
}